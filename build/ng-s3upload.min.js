/*! ngs3upload 20-01-2016 */
!function(a,b){angular.module("ngS3upload.config",[]),angular.module("ngS3upload.directives",[]),angular.module("ngS3upload.services",[]),angular.module("ngS3upload",["ngS3upload.config","ngS3upload.directives","ngS3upload.services","ngSanitize"]),angular.module("ngS3upload.config").constant("ngS3Config",{theme:"bootstrap2",imgFormats:["jpg","jpeg","png","gif","apng","svg","bmp","ico","bmp","dib"]}).value("ngS3UploadConfig",{}).config(["$compileProvider",function(a){angular.isDefined(a.urlSanitizationWhitelist)?a.urlSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|data):/):a.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|data):/)}]),angular.module("ngS3upload.services").service("S3Uploader",["$http","$q","$window",function(a,b,c){this.uploads=0;var d=this;this.getUploadOptions=function(c){var d=b.defer();return a.get(c).success(function(a,b){d.resolve(a)}).error(function(a,b){d.reject(a)}),d.promise},this.randomString=function(a){for(var b="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",c="",d=a;d>0;--d)c+=b[Math.round(Math.random()*(b.length-1))];return c},this.upload=function(a,c,e,f,g,h,i,j,k,l){function m(b){a.$apply(function(){b.lengthComputable?a.progress=Math.round(100*b.loaded/b.total):a.progress="unable to compute";var c={type:"progress",value:a.progress};a.$emit("s3upload:progress",c),"function"==typeof q.notify&&q.notify(c)})}function n(b){var f=b.srcElement||b.target;a.$apply(function(){d.uploads--,a.uploading=!1,204===f.status||l&&200===f.status?(a.success=!0,q.resolve(f),a.$emit("s3upload:success",f,{path:c+e})):(a.success=!1,q.reject(f),a.$emit("s3upload:error",f))})}function o(b){var c=b.srcElement||b.target;a.$apply(function(){d.uploads--,a.uploading=!1,a.success=!1,q.reject(c),a.$emit("s3upload:error",c)})}function p(b){var c=b.srcElement||b.target;a.$apply(function(){d.uploads--,a.uploading=!1,a.success=!1,q.reject(c),a.$emit("s3upload:abort",c)})}var q=b.defer();a.attempt=!0;var r=new FormData;r.append("key",e),r.append("acl",f),r.append("Content-Type",k.type),r.append("AWSAccessKeyId",h),r.append("policy",i),r.append("signature",j),r.append("file",k);var s=new XMLHttpRequest;return s.upload.addEventListener("progress",m,!1),s.addEventListener("load",n,!1),s.addEventListener("error",o,!1),s.addEventListener("abort",p,!1),a.$emit("s3upload:start",s),a.uploading=!0,this.uploads++,s.open("POST",c,!0),s.send(r),q.promise},this.isUploading=function(){return this.uploads>0}}]),angular.module("ngS3upload.directives").provider("s3UploadConfig",function(){this.setTestMode=function(a){this.testmode=!0,this.uploadURI=a.uploadURI},this.$get=function(){return this}}),angular.module("ngS3upload.directives").directive("s3Upload",["$parse","S3Uploader","ngS3Config","ngS3UploadConfig","s3UploadConfig","$timeout",function(a,b,c,d,e,f){return{restrict:"AC",require:"?ngModel",replace:!0,transclude:!1,scope:{fileName:"="},controller:["$scope","$element","$attrs","$transclude",function(a,b,c,d){a.attempt=!1,a.success=!1,a.uploading=!1,a.isUploadSuccessful=function(){return a.attempt&&!a.uploading&&a.success}}],compile:function(a,g,h){return{pre:function(a,b,c){if(angular.isUndefined(c.bucket))throw Error("bucket is a mandatory attribute")},post:function(a,g,h,i){function j(a){for(var b="Please upload a ",c=0;c<a.length;c++)b+=c===a.length-1?(1===a.length?"":"or ")+a[c].toUpperCase()+" file":a[c].toUpperCase()+", ";return b}function k(a,b){if(a){var c=a.split(".").pop();return-1!==b.indexOf(c.toLowerCase())}return!1}var l=angular.extend({},a.$eval(h.s3UploadOptions||h.options));l=angular.extend({submitOnChange:!0,getOptionsUri:"/getS3Options",getManualOptions:null,acl:"public-read",uploadingKey:"uploading",folder:"",enableValidation:!0,targetFilename:null,accept:""},d,l);var m=a.$eval(h.bucket),n=angular.element(g.find("input")[0]);a.uploadClick=function(){n[0].click()},a.accept=l.accept,a.wrongFormatError=null,a.isImg=!1,i.$render=function(){a.fileURL=i.$viewValue,a.isImg=k(a.fileURL,c.imgFormats)};var o=function(){function d(c){l.enableValidation&&i.$setValidity("uploading",!1);var d=e.testmode?e.uploadURI:"https://"+m+".s3.amazonaws.com/",g=l.targetFilename?a.$eval(l.targetFilename):l.folder+(new Date).getTime()+"-"+b.randomString(16)+"."+h;b.upload(a,d,g,l.acl,f.type,c.key,c.policy,c.signature,f,e.testmode).then(function(b){var c=e.testmode?b.responseText:d+g;i.$setViewValue(c),a.fileURL=i.$viewValue,l.enableValidation&&(i.$setValidity("uploading",!0),i.$setValidity("succeeded",!0))},function(){a.fileURL=i.$viewValue,l.enableValidation&&(i.$setValidity("uploading",!0),i.$setValidity("succeeded",!1))})}var f=n[0].files[0],g=a.fileName=f.name,h=g.split(".").pop();if(a.wrongFormatError=null,l.allowedTypes&&l.allowedTypes.length>0){var o=h.toLowerCase();if(-1===l.allowedTypes.indexOf(o)||-1===g.indexOf("."))return void(a.wrongFormatError=j(l.allowedTypes))}a.isImg=k(g,c.imgFormats),angular.isObject(l.getManualOptions)?d(l.getManualOptions):b.getUploadOptions(l.getOptionsUri).then(function(a){d(a)},function(a){throw Error("Can't receive the needed options for S3 "+a)})};g.bind("change",function(b){l.submitOnChange&&f(function(){a.$apply(function(){o()})})}),angular.isDefined(h.doUpload)&&a.$watch(h.doUpload,function(a){a&&o()})}}},templateUrl:function(a,b){var d=b.theme||c.theme;return-1===d.indexOf("/")?"theme/"+d+".html":d}}}]),angular.module("ngS3upload").run(["$templateCache",function(a){"use strict";a.put("theme/bootstrap2.html",'<div class="upload-wrap">\n  <div ng-hide="wrongFormatError==null">\n    <div class="alert alert-danger">{{wrongFormatError}}</div>\n  </div>\n  <button class="btn btn-primary" ng-click="uploadClick()" type="button">\n    <span ng-if="!filename">Choose file</span>\n    <span ng-if="filename">Replace file</span>\n  </button>\n  <a ng-href="{{ filename }}" target="_blank" ng-if="filename">Stored file</a>\n  <div class="progress progress-striped" ng-class="{active: uploading}" ng-show="attempt" style="margin-top: 10px;">\n    <div class="bar" ng-class="{\'bar-success\': isUploadSuccessful()}" style="width: {{ progress }}%;"></div>\n  </div>\n  <input type="file" class="hidden" accept="{{accept}}"/>\n</div>\n'),a.put("theme/bootstrap3.html",'<div class="upload-wrap">\n  <div ng-hide="wrongFormatError==null">\n    <div class="alert alert-danger">{{wrongFormatError}}</div>\n  </div>\n  <button class="btn btn-primary" ng-click="uploadClick()" type="button">\n    <span ng-if="!filename">Choose file</span>\n    <span ng-if="filename">Replace file</span>\n  </button>\n  <a ng-href="{{ filename }}" target="_blank" ng-if="filename">Stored file</a>\n  <div class="progress" style="margin-top: 10px;" ng-show="attempt">\n    <div class="progress-bar progress-bar-striped" ng-class="{active: uploading, \'bar-success\': isUploadSuccessful()}" role="progressbar" aria-valuemin="0" aria-valuemax="100" style="width: {{ progress }}%;">\n      <span class="sr-only">{{progress}}% Complete</span>\n    </div>\n  </div>\n  <input type="file" class="hidden" accept="{{accept}}"/>\n</div>\n')}])}(window,document);